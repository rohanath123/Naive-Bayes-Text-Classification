from classification import *
from data_clean import *
import numpy as np

# THIS IS THE MAIN FILE. MAKE SURE YOU RUN THIS FILE THE LAST. FIRST, RUN CLASSIFICATION.PY ONCE, THEN RUN DATA_CLEAN.PY, THEN RUN THIS FILE AT THE END. 

# IMPORT ALL FUCNTIONS FROM ALL DOCUMENTS, AND USE UNDERSAMPLE IN DATA_CLEAN.PY TO FETCH, CLEAN AND UNDERSAMPLE DATA FIT FOR TRAINING AND TESTING. 
# HERE, 50 IS THE NUMBER TO UNDERSAMPLE ABUNDANT CLASSES TO, NAMES IS THE SET OF ALL CLASSES (DEFINED IN DATA_CLEAN, DONT WORRY ABOUT IT), AND THE LAST ARGUMENT IS THE LIST OF 
# ABUNDANT CLASSES. THIS ESSENTIALLY FETCHES THE DATA. 
data, target = undersample(50, names, ["Rent", "Fee", "Life Insurance", "Housing Loan", "Mutual Funds"])

# TEXT_CLF IS THE CLASSIFIER DEFINED IN CLASSIFICATION.PY. IT FITS AND TRAINS ON THE DATA AUTOMATICALLY BY CALLING .FIT(), DONT WORRY ABOUT IT. 
text_clf = text_clf.fit(data, target)

# .PREDICT() IS USED TO PREDICT ON THE TRAINED CLASSIFIER. JUST INSERT THE TEXT TO CLASSIFY IN THE BRACKETS BELOW
pred = text_clf.predict([#ENTER TEXT IN QUOTES HERE FOR PREDICTION AND REMOVE HASHTAG])
print(pred)

# NOTES: DONT WORRY ABOUT SAVING A PRETRAINED MODEL. THE MODEL TRAINS ITSELF THE EXACT SAME WAY EVERYTIME YOU RUN THIS FILE ANYWAYS AND IS VERY VERY SMALL IN TERMS OF SPACE, ALSO
# DOESNT TAKE ANY TIME TO RUN AT ALL. DONT WORRY ABOUT IT. 

# YOULL NEED TO INSTALL A FEW PACKAGES. INSTALL: NLTK, SKLEARN. NOTE THAT THE NLTK PACKAGE INHERENTLY DOES NOT INCLUDE 'WORDS' AND 'TOKENIZE' PACKAGES, SO I INCLUDED THE CODE TO 
# AUTOMATICALLY DOWNLOAD THEM WHEN YOU FIRST RUN THE DATA_CLEAN.PY FILE, DONT WORRY ABOUT IT. ALSO, YOU CANT AUTOMATICALLY DOWNLOAD THE 'MOSES' PACKAGE, SO IVE ATTACHED THE MOSES.PY FILE 
# IN THE EMAIL. AFTER YOUVE DOWNLOADED NLTK, GO TO THE PLACE YOUVE DOWNLOADED IT, GO TO NLTK/TOKENIZE AND SIMPLY PASTE THE MOSES.PY FILE THERE. DONT WORRY ABOUT IT. 
